package back1012;

import java.util.*;
import java.io.*;


public class Main {
	static int mat[][];
	static boolean visit[][];
	static int result;
	public static void main (String args[])throws Exception{
		BufferedReader br = new BufferedReader ( new InputStreamReader(System.in));
		int T = Integer.parseInt(br.readLine());
		StringTokenizer st;
		String input = br.readLine();
		st = new StringTokenizer(input," ");
		int M = Integer.parseInt(st.nextToken());
		int N = Integer.parseInt(st.nextToken());
		int K = Integer.parseInt(st.nextToken());
		mat = new int[M+2][N+2];
		visit = new boolean[M+2][N+2];
		for ( int i = 1 ; i <= M ; i++){
			for ( int j = 1 ; j <= N ; j++){
				mat[i][j] = 0;
			}
		}
		for ( int i = 0 ; i < K ; i++){
			String tmp = br.readLine();
			st = new StringTokenizer(tmp," ");
			int x = Integer.parseInt(st.nextToken());
			int y = Integer.parseInt(st.nextToken());
			mat[x+1][y+1] = 1;
		}
		
		for ( int i = 1 ; i <= M ; i++){
			for ( int j = 1 ; j <= N ; j++){
				if ( visit[i][j] == false ){
					BFS(i,j);
				}
			}
		}
	}
	
	public static void BFS(int x, int y ){
		Queue<data> q = new LinkedList<>();
	}
}
 

