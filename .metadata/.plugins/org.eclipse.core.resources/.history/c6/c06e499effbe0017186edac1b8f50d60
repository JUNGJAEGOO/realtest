package back1707;
import java.util.*;
public class Main {
	static ArrayList<data> adj[];
	static ArrayList<data> node;
	public static void main(String args[]){
		Scanner in = new Scanner(System.in);
		int T = in.nextInt();
		
		while ( T > 0){
			
			int V = in.nextInt();
			int E = in.nextInt();
			
			adj = new ArrayList[V];
			node = new ArrayList<data>();
			for ( int i = 0 ; i < V ; i++){
				adj[i] = new ArrayList<data>();
			}
			for ( int i = 0 ; i < E ; i++){
				int x = in.nextInt()-1;
				int y = in.nextInt()-1;
				adj[x].add(new data(y));
				adj[y].add(new data(x));
			}
			
			
			
			DFS();
			
			T--;
		}
	}
	
	public static void DFS(){
		
		Stack<Integer> st = new Stack<Integer>();
		st.push();
		
		while ( !st.isEmpty() ){
			int tmp = st.pop();
			for ( int i = 0 ; i < adj[tmp].size() ; i++ ){
				if ( adj[tmp].get(i).color == -1 ){
					st.push(adj[tmp].get(i).num);
						if( node.get(tmp).color == 1){
							adj[tmp].get(i).color = 0;
						}else{
							adj[tmp].get(i).color = 1;
						}
					break;
				}
			}
		}
		
		
	};
	
	public static class data{
		int color = -1;
		int num;
		data(int num){
			this.num = num;
		}
	}
}
